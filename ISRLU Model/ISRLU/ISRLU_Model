{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"ISRLU_Model","provenance":[],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"cell_type":"code","metadata":{"id":"jU6zh3UPI7Sy","colab_type":"code","outputId":"892cb797-e662-4f3e-a993-cd69b9df79af","executionInfo":{"status":"ok","timestamp":1577457257309,"user_tz":-330,"elapsed":2507,"user":{"displayName":"Vineeth M","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mAmiLzUgr5FFsdKcniKlQh-PNfLmU0Lo9V-rUvb=s64","userId":"07930221275951267559"}},"colab":{"base_uri":"https://localhost:8080/","height":97}},"source":["#importing the packages\n","import numpy as np\n","import keras\n","from tensorflow.keras.datasets import mnist\n","from tensorflow.keras.models import Sequential\n","from tensorflow.keras.layers import Dense, Dropout, Flatten, Conv2D, MaxPooling2D, Activation\n","from keras import backend as K\n","from keras.preprocessing import image\n","from keras.applications.mobilenet import MobileNet\n","from keras.applications.vgg16 import preprocess_input, decode_predictions\n","from keras.models import Model\n","import timeit\n","import math\n","import warnings\n","import tensorflow as tf\n","from keras.utils.generic_utils import get_custom_objects\n","warnings.filterwarnings('ignore')\n","#tf.enable_eager_execution()"],"execution_count":3,"outputs":[{"output_type":"stream","text":["Using TensorFlow backend.\n"],"name":"stderr"},{"output_type":"display_data","data":{"text/html":["<p style=\"color: red;\">\n","The default version of TensorFlow in Colab will soon switch to TensorFlow 2.x.<br>\n","We recommend you <a href=\"https://www.tensorflow.org/guide/migrate\" target=\"_blank\">upgrade</a> now \n","or ensure your notebook will continue to use TensorFlow 1.x via the <code>%tensorflow_version 1.x</code> magic:\n","<a href=\"https://colab.research.google.com/notebooks/tensorflow_version.ipynb\" target=\"_blank\">more info</a>.</p>\n"],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"lDwyCcEbI-pj","colab_type":"code","outputId":"e5612ada-76cb-464e-f6ef-eac16840c459","executionInfo":{"status":"ok","timestamp":1577457273758,"user_tz":-330,"elapsed":3828,"user":{"displayName":"Vineeth M","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mAmiLzUgr5FFsdKcniKlQh-PNfLmU0Lo9V-rUvb=s64","userId":"07930221275951267559"}},"colab":{"base_uri":"https://localhost:8080/","height":102}},"source":["#preparing the dataset\n","batch_size = 128\n","num_classes = 10\n","epochs = 15\n","\n","# input image dimensions\n","img_rows, img_cols = 28, 28\n","\n","# the data, shuffled and split between train and test sets\n","(x_train, y_train), (x_test, y_test) = mnist.load_data()\n","\n","if K.image_data_format() == 'channels_first':\n","    x_train = x_train.reshape(x_train.shape[0], 1, img_rows, img_cols)\n","    x_test = x_test.reshape(x_test.shape[0], 1, img_rows, img_cols)\n","    input_shape = (1, img_rows, img_cols)\n","else:\n","    x_train = x_train.reshape(x_train.shape[0], img_rows, img_cols, 1)\n","    x_test = x_test.reshape(x_test.shape[0], img_rows, img_cols, 1)\n","    input_shape = (img_rows, img_cols, 1)\n","\n","x_train = x_train.astype('float32')\n","x_test = x_test.astype('float32')\n","x_train /= 255\n","x_test /= 255\n","print('x_train shape:', x_train.shape)\n","print(x_train.shape[0], 'train samples')\n","print(x_test.shape[0], 'test samples')\n","\n","# convert class vectors to binary class matrices\n","y_train = keras.utils.to_categorical(y_train, num_classes)\n","y_test = keras.utils.to_categorical(y_test, num_classes)"],"execution_count":5,"outputs":[{"output_type":"stream","text":["Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/mnist.npz\n","11493376/11490434 [==============================] - 1s 0us/step\n","x_train shape: (60000, 28, 28, 1)\n","60000 train samples\n","10000 test samples\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"Jj8Wb8SyI_K1","colab_type":"code","colab":{}},"source":["#custom activation function for ISRLU.\n","@tf.function\n","def isrlu(x, alpha = 3):\n","  if tf.math.sign(x) == -1:\n","    return (x/(tf.math.sqrt(1 + alpha * tf.math.square(x, x))))\n","  else:\n","    return x\n","\n","get_custom_objects().update({'isrlu':Activation(isrlu)})"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"MX_u2ZxaIPIG","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"bk5ivs0qRkDT","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":105},"outputId":"677bbad5-4d73-41fd-cb3c-c4bf0932d3de","executionInfo":{"status":"ok","timestamp":1577457286483,"user_tz":-330,"elapsed":8212,"user":{"displayName":"Vineeth M","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mAmiLzUgr5FFsdKcniKlQh-PNfLmU0Lo9V-rUvb=s64","userId":"07930221275951267559"}}},"source":["!pip install pyyaml h5py\n","\n","from __future__ import absolute_import, division, print_function, unicode_literals\n"],"execution_count":7,"outputs":[{"output_type":"stream","text":["Requirement already satisfied: pyyaml in /usr/local/lib/python3.6/dist-packages (3.13)\n","Requirement already satisfied: h5py in /usr/local/lib/python3.6/dist-packages (2.8.0)\n","Requirement already satisfied: numpy>=1.7 in /usr/local/lib/python3.6/dist-packages (from h5py) (1.17.4)\n","Requirement already satisfied: six in /usr/local/lib/python3.6/dist-packages (from h5py) (1.12.0)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"GwxSi8O4I_Nz","colab_type":"code","outputId":"0df38998-dba5-42aa-eab8-35f5e6f15715","executionInfo":{"status":"error","timestamp":1577463190165,"user_tz":-330,"elapsed":1285,"user":{"displayName":"Vineeth M","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mAmiLzUgr5FFsdKcniKlQh-PNfLmU0Lo9V-rUvb=s64","userId":"07930221275951267559"}},"colab":{"base_uri":"https://localhost:8080/","height":231}},"source":["#building the model \n","model = Sequential()\n","model.add(Conv2D(8, kernel_size=(3, 3), activation='relu', input_shape=input_shape))\n","model.add(MaxPooling2D(pool_size=(2, 2)))\n","model.add(Conv2D(16, (3, 3), activation='relu'))\n","model.add(MaxPooling2D(pool_size=(2, 2)))\n","model.add(Dropout(0.25))\n","model.add(Flatten())\n","#model.add(Dense(32, activation=isrlu))\n","model.add(Dense(32))\n","model.add(Activation(isrlu))\n","model.add(Dropout(0.5))\n","model.add(Dense(num_classes, activation='softmax'))\n","\n","model.compile(loss=keras.losses.categorical_crossentropy,\n","              optimizer='adam',\n","              metrics=['accuracy'])\n","  \n","  \n","\n","#model = create_model()\n","model.summary()"],"execution_count":1,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-1-cce02e3d016a>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mmodel\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mSequential\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0madd\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mConv2D\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m8\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkernel_size\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m3\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m3\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mactivation\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'relu'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minput_shape\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0minput_shape\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0madd\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mMaxPooling2D\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpool_size\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m2\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0madd\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mConv2D\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m16\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0;36m3\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m3\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mactivation\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'relu'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0madd\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mMaxPooling2D\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpool_size\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m2\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'Sequential' is not defined"]}]},{"cell_type":"code","metadata":{"id":"DW9UeW7EI_Je","colab_type":"code","outputId":"f31f4fdf-9e5d-424a-f22f-4e53a9b366d7","executionInfo":{"status":"ok","timestamp":1577457346744,"user_tz":-330,"elapsed":45425,"user":{"displayName":"Vineeth M","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mAmiLzUgr5FFsdKcniKlQh-PNfLmU0Lo9V-rUvb=s64","userId":"07930221275951267559"}},"colab":{"base_uri":"https://localhost:8080/","height":632}},"source":["#model training\n","model.fit(x_train, y_train,\n","          batch_size=batch_size,\n","          epochs=epochs,\n","          verbose=1,\n","          validation_data=(x_test, y_test))"],"execution_count":9,"outputs":[{"output_type":"stream","text":["WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/tensorflow_core/python/ops/math_grad.py:1424: where (from tensorflow.python.ops.array_ops) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Use tf.where in 2.0, which has the same broadcast rule as np.where\n","Train on 60000 samples, validate on 10000 samples\n","Epoch 1/15\n","60000/60000 [==============================] - 8s 139us/sample - loss: 0.6268 - acc: 0.8028 - val_loss: 0.1242 - val_acc: 0.9638\n","Epoch 2/15\n","60000/60000 [==============================] - 2s 33us/sample - loss: 0.2330 - acc: 0.9290 - val_loss: 0.0814 - val_acc: 0.9750\n","Epoch 3/15\n","60000/60000 [==============================] - 2s 34us/sample - loss: 0.1867 - acc: 0.9440 - val_loss: 0.0636 - val_acc: 0.9809\n","Epoch 4/15\n","60000/60000 [==============================] - 2s 34us/sample - loss: 0.1603 - acc: 0.9521 - val_loss: 0.0560 - val_acc: 0.9820\n","Epoch 5/15\n","60000/60000 [==============================] - 2s 35us/sample - loss: 0.1437 - acc: 0.9578 - val_loss: 0.0498 - val_acc: 0.9844\n","Epoch 6/15\n","60000/60000 [==============================] - 2s 36us/sample - loss: 0.1334 - acc: 0.9609 - val_loss: 0.0455 - val_acc: 0.9844\n","Epoch 7/15\n","60000/60000 [==============================] - 2s 34us/sample - loss: 0.1237 - acc: 0.9633 - val_loss: 0.0456 - val_acc: 0.9852\n","Epoch 8/15\n","60000/60000 [==============================] - 2s 34us/sample - loss: 0.1158 - acc: 0.9655 - val_loss: 0.0421 - val_acc: 0.9862\n","Epoch 9/15\n","60000/60000 [==============================] - 2s 32us/sample - loss: 0.1098 - acc: 0.9676 - val_loss: 0.0398 - val_acc: 0.9860\n","Epoch 10/15\n","60000/60000 [==============================] - 2s 33us/sample - loss: 0.1054 - acc: 0.9689 - val_loss: 0.0372 - val_acc: 0.9873\n","Epoch 11/15\n","60000/60000 [==============================] - 2s 34us/sample - loss: 0.1028 - acc: 0.9696 - val_loss: 0.0359 - val_acc: 0.9875\n","Epoch 12/15\n","60000/60000 [==============================] - 2s 34us/sample - loss: 0.0993 - acc: 0.9704 - val_loss: 0.0342 - val_acc: 0.9882\n","Epoch 13/15\n","60000/60000 [==============================] - 2s 34us/sample - loss: 0.0995 - acc: 0.9712 - val_loss: 0.0364 - val_acc: 0.9874\n","Epoch 14/15\n","60000/60000 [==============================] - 2s 34us/sample - loss: 0.0934 - acc: 0.9720 - val_loss: 0.0345 - val_acc: 0.9875\n","Epoch 15/15\n","60000/60000 [==============================] - 2s 33us/sample - loss: 0.0914 - acc: 0.9732 - val_loss: 0.0323 - val_acc: 0.9883\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["<tensorflow.python.keras.callbacks.History at 0x7f9d41ac0b70>"]},"metadata":{"tags":[]},"execution_count":9}]},{"cell_type":"code","metadata":{"id":"UfevVriUJG4H","colab_type":"code","outputId":"94ac5568-be47-4f2d-bb60-adb03859674d","executionInfo":{"status":"ok","timestamp":1577457399962,"user_tz":-330,"elapsed":2623,"user":{"displayName":"Vineeth M","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mAmiLzUgr5FFsdKcniKlQh-PNfLmU0Lo9V-rUvb=s64","userId":"07930221275951267559"}},"colab":{"base_uri":"https://localhost:8080/","height":51}},"source":["#testing\n","score = model.evaluate(x_test, y_test, verbose=0)\n","print('Test loss:', score[0])\n","print('Test accuracy:', score[1])"],"execution_count":10,"outputs":[{"output_type":"stream","text":["Test loss: 0.03226530008905101\n","Test accuracy: 0.9883\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"AHvKyc_DJMLk","colab_type":"code","outputId":"2a9278e3-ffc6-4daa-a79a-b88abbca30ba","executionInfo":{"status":"ok","timestamp":1577457405522,"user_tz":-330,"elapsed":1834,"user":{"displayName":"Vineeth M","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mAmiLzUgr5FFsdKcniKlQh-PNfLmU0Lo9V-rUvb=s64","userId":"07930221275951267559"}},"colab":{"base_uri":"https://localhost:8080/","height":265}},"source":["#prediction\n","import pylab as plt\n","\n","plt.imshow(x_test[140:141].reshape(28,28),cmap='gray')\n","plt.show()"],"execution_count":11,"outputs":[{"output_type":"display_data","data":{"image/png":"iVBORw0KGgoAAAANSUhEUgAAAPsAAAD4CAYAAAAq5pAIAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4xLjIsIGh0\ndHA6Ly9tYXRwbG90bGliLm9yZy8li6FKAAANWUlEQVR4nO3db6xU9Z3H8c9Hl/oAKkKxBMHdWxtj\n0myyYggx0RgNaeMaEStJLTGrmzZeTKqpsbFilwTNxkjWZfeJsQlYLa4oKVFa05hthZAVjSEgoYh/\nWhEhBRHi8qD2UVG+++Aeuhe885vLzJw5w/2+X8nNzJzvnDnfHP1wzpwz5/wcEQIw8Z3TdAMA+oOw\nA0kQdiAJwg4kQdiBJP6mnwuzzaF/oGYR4bGmd7Vlt3297d/b3mt7WTefBaBe7vQ8u+1zJf1B0jcl\nHZS0XdKSiHinMA9bdqBmdWzZ50vaGxH7IuIvktZLWtTF5wGoUTdhny3pj6NeH6ymncL2sO0dtnd0\nsSwAXar9AF1ErJa0WmI3HmhSN1v2Q5IuHvV6TjUNwADqJuzbJV1q+2u2vyTpu5Je6k1bAHqt4934\niPjM9t2SfiPpXElPRcTbPesMQE91fOqto4XxnR2oXS0/qgFw9iDsQBKEHUiCsANJEHYgCcIOJEHY\ngSQIO5AEYQeSIOxAEoQdSIKwA0kQdiCJvt5KGhPPhRdeWKyvWbOmZW1oaKg47+LFi4v1Dz74oFjH\nqdiyA0kQdiAJwg4kQdiBJAg7kARhB5Ig7EASnGdHV+66665ifeHChS1rTzzxRHHeAwcOdNQTxsaW\nHUiCsANJEHYgCcIOJEHYgSQIO5AEYQeSYBRXFC1fvrxYv//++4v1jRs3tqzdeeedxXmPHz9erGNs\nrUZx7epHNbb3S/pU0ueSPouIed18HoD69OIXdNdFxCc9+BwANeI7O5BEt2EPSb+1/abt4bHeYHvY\n9g7bO7pcFoAudLsbf3VEHLL9VUmv2H4vIl4d/YaIWC1ptcQBOqBJXW3ZI+JQ9XhU0kZJ83vRFIDe\n6zjstifb/vLJ55K+JWlPrxoD0Fvd7MbPlLTR9snPeS4i/rsnXaFv5s8v74zdd999xfp5551XrD/7\n7LMta5xH76+Owx4R+yT9Qw97AVAjTr0BSRB2IAnCDiRB2IEkCDuQBLeSTu6BBx4o1qdOnVqsL1u2\nrFjftGnTGfeEerBlB5Ig7EAShB1IgrADSRB2IAnCDiRB2IEkuJX0BLdkyZJifd26dcX6hg0bivVb\nb731jHtCvVrdSpotO5AEYQeSIOxAEoQdSIKwA0kQdiAJwg4kwfXsE8CUKVNa1lauXFmct93vLJ5+\n+umOesLgYcsOJEHYgSQIO5AEYQeSIOxAEoQdSIKwA0lwnn0CuPLKK1vW5syZU5z35ZdfLta3bt3a\nUU8YPG237Lafsn3U9p5R06bbfsX2+9XjtHrbBNCt8ezG/1zS9adNWyZpc0RcKmlz9RrAAGsb9oh4\nVdKx0yYvkrS2er5W0s097gtAj3X6nX1mRByunn8saWarN9oeljTc4XIA9EjXB+giIko3koyI1ZJW\nS9xwEmhSp6fejtieJUnV49HetQSgDp2G/SVJd1TP75D0q960A6Aube8bb/t5SddKmiHpiKQVkn4p\n6ReS/lbSAUnfiYjTD+KN9Vnsxtfgvffea1m75JJLivOWztFL0s6dOzvqCc1pdd/4tt/ZI6LVKAML\nuuoIQF/xc1kgCcIOJEHYgSQIO5AEYQeS4BLXs8Ds2bOL9Ysuuqhlbd++fcV5ObWWB1t2IAnCDiRB\n2IEkCDuQBGEHkiDsQBKEHUiC8+xngWeeeaZYLw3ZfM899/S6HZyl2LIDSRB2IAnCDiRB2IEkCDuQ\nBGEHkiDsQBJtbyXd04VxK+mOnDhxolgv/Te87LLLivPu3bu3o55OuuCCC4r10vKHhoaK827btq1Y\n379/f7GeVatbSbNlB5Ig7EAShB1IgrADSRB2IAnCDiRB2IEkuJ59AJx//vldzf/aa6+1rB04cKCr\nz77qqquK9fXr1xfrkyZNallrd53+TTfdVKy/8cYbxfrjjz9erGfTdstu+ynbR23vGTXtIduHbO+q\n/m6ot00A3RrPbvzPJV0/xvT/jIjLq7+Xe9sWgF5rG/aIeFXSsT70AqBG3Rygu9v27mo3f1qrN9ke\ntr3D9o4ulgWgS52G/aeSvi7pckmHJa1q9caIWB0R8yJiXofLAtADHYU9Io5ExOcRcULSGknze9sW\ngF7rKOy2Z416+W1Je1q9F8BgaHue3fbzkq6VNMP2QUkrJF1r+3JJIWm/pKU19jjhLVy4sKv5N2zY\n0LJ2/Pjx4rznnFP+937FihXF+tSpU4v1W265pWVt06ZNxXnbrZcnn3yyWOc8+6nahj0ilowx+Wc1\n9AKgRvxcFkiCsANJEHYgCcIOJEHYgSS4xHUANHlL5Llz5xbrCxYsKNavueaaYv31118/455O+vDD\nD4v1GTNmdPzZGbFlB5Ig7EAShB1IgrADSRB2IAnCDiRB2IEkOM8+ANqdi7bHHIH3r2677baWtXaX\neba7VfRzzz1XrHdzHr1bH330UWPLPhuxZQeSIOxAEoQdSIKwA0kQdiAJwg4kQdiBJDjPfhbYvn17\nsX7FFVe0rM2bVx6IZ/LkycV6RBTrdbruuuuK9S1btvSpk4mBLTuQBGEHkiDsQBKEHUiCsANJEHYg\nCcIOJMF59rPA8PBwsb5169aWteXLlxfnLV0LL7UfNnloaKhYL90Tf8mSsQYI/n8PPvhgsf7II48U\n6zhV2y277Yttb7H9ju23bf+wmj7d9iu2368ep9XfLoBOjWc3/jNJP4qIb0i6UtIPbH9D0jJJmyPi\nUkmbq9cABlTbsEfE4YjYWT3/VNK7kmZLWiRpbfW2tZJurqtJAN07o+/stockzZW0TdLMiDhclT6W\nNLPFPMOSyl86AdRu3EfjbU+R9IKkeyPiT6NrMXK1xJhXTETE6oiYFxHlKzIA1GpcYbc9SSNBXxcR\nL1aTj9ieVdVnSTpaT4sAesHtLmH0yH2M10o6FhH3jpr+mKT/jYiVtpdJmh4RP27zWc1dLzmBlU5R\nPfzww8V5d+/eXay3m7+dxYsXt6zdeOONxXlXrVpVrD/66KMd9TTRRcSY9x4fz3f2qyT9k6S3bO+q\npv1E0kpJv7D9fUkHJH2nF40CqEfbsEfEa5JajVKwoLftAKgLP5cFkiDsQBKEHUiCsANJEHYgibbn\n2Xu6MM6z991jjz1WrN9+++3F+owZM4r1dsNJl26DvXTp0uK8u3btKtYxtlbn2dmyA0kQdiAJwg4k\nQdiBJAg7kARhB5Ig7EASnGcHJhjOswPJEXYgCcIOJEHYgSQIO5AEYQeSIOxAEoQdSIKwA0kQdiAJ\nwg4kQdiBJAg7kARhB5Ig7EASbcNu+2LbW2y/Y/tt2z+spj9k+5DtXdXfDfW3C6BTbW9eYXuWpFkR\nsdP2lyW9KelmjYzH/ueI+PdxL4ybVwC1a3XzivGMz35Y0uHq+ae235U0u7ftAajbGX1ntz0kaa6k\nbdWku23vtv2U7Wkt5hm2vcP2jq46BdCVcd+DzvYUSf8j6ZGIeNH2TEmfSApJ/6qRXf3vtfkMduOB\nmrXajR9X2G1PkvRrSb+JiP8Yoz4k6dcR8fdtPoewAzXr+IaTHhmm82eS3h0d9OrA3UnflrSn2yYB\n1Gc8R+OvlrRV0luSTlSTfyJpiaTLNbIbv1/S0upgXumz2LIDNetqN75XCDtQP+4bDyRH2IEkCDuQ\nBGEHkiDsQBKEHUiCsANJEHYgCcIOJEHYgSQIO5AEYQeSIOxAEoQdSKLtDSd77BNJB0a9nlFNG0SD\n2tug9iXRW6d62dvftSr09Xr2Lyzc3hER8xproGBQexvUviR661S/emM3HkiCsANJNB321Q0vv2RQ\nexvUviR661Rfemv0OzuA/ml6yw6gTwg7kEQjYbd9ve3f295re1kTPbRie7/tt6phqBsdn64aQ++o\n7T2jpk23/Yrt96vHMcfYa6i3gRjGuzDMeKPrrunhz/v+nd32uZL+IOmbkg5K2i5pSUS809dGWrC9\nX9K8iGj8Bxi2r5H0Z0nPnBxay/a/SToWESurfyinRcQDA9LbQzrDYbxr6q3VMOP/rAbXXS+HP+9E\nE1v2+ZL2RsS+iPiLpPWSFjXQx8CLiFclHTtt8iJJa6vnazXyP0vftehtIETE4YjYWT3/VNLJYcYb\nXXeFvvqiibDPlvTHUa8ParDGew9Jv7X9pu3hppsZw8xRw2x9LGlmk82Moe0w3v102jDjA7PuOhn+\nvFscoPuiqyPiCkn/KOkH1e7qQIqR72CDdO70p5K+rpExAA9LWtVkM9Uw4y9Iujci/jS61uS6G6Ov\nvqy3JsJ+SNLFo17PqaYNhIg4VD0elbRRI187BsmRkyPoVo9HG+7nryLiSER8HhEnJK1Rg+uuGmb8\nBUnrIuLFanLj626svvq13poI+3ZJl9r+mu0vSfqupJca6OMLbE+uDpzI9mRJ39LgDUX9kqQ7qud3\nSPpVg72cYlCG8W41zLgaXneND38eEX3/k3SDRo7IfyDpX5rooUVfl0j6XfX3dtO9SXpeI7t1xzVy\nbOP7kr4iabOk9yVtkjR9gHr7L40M7b1bI8Ga1VBvV2tkF323pF3V3w1Nr7tCX31Zb/xcFkiCA3RA\nEoQdSIKwA0kQdiAJwg4kQdiBJAg7kMT/ATkrLLcfc+RQAAAAAElFTkSuQmCC\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"2KfTEY1wJPkY","colab_type":"code","outputId":"1cce8f89-446b-4f66-a4b6-3f856b22be8c","executionInfo":{"status":"ok","timestamp":1577457419201,"user_tz":-330,"elapsed":1942,"user":{"displayName":"Vineeth M","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mAmiLzUgr5FFsdKcniKlQh-PNfLmU0Lo9V-rUvb=s64","userId":"07930221275951267559"}},"colab":{"base_uri":"https://localhost:8080/","height":170}},"source":["import numpy as np\n","prediction = model.predict(x_test[130:131])\n","print('Prediction Score:\\n',prediction[0])\n","thresholded = (prediction>0.5)*1\n","print('\\nThresholded Score:\\n',thresholded[0])\n","print('\\nPredicted Digit:\\n',np.where(thresholded == 1)[1][0])"],"execution_count":12,"outputs":[{"output_type":"stream","text":["Prediction Score:\n"," [1.0346926e-06 9.9439690e-10 5.5240540e-10 7.6124454e-11 7.5059091e-08\n"," 2.2506878e-05 9.9997437e-01 5.8716326e-12 1.8921942e-06 1.2038242e-07]\n","\n","Thresholded Score:\n"," [0 0 0 0 0 0 1 0 0 0]\n","\n","Predicted Digit:\n"," 6\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"c6pP6o83N5aP","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"c5511050-8d53-4dc3-b42f-d0321336e871","executionInfo":{"status":"ok","timestamp":1577457554697,"user_tz":-330,"elapsed":1969,"user":{"displayName":"Vineeth M","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mAmiLzUgr5FFsdKcniKlQh-PNfLmU0Lo9V-rUvb=s64","userId":"07930221275951267559"}}},"source":["import os \n","print(os.getcwd())"],"execution_count":19,"outputs":[{"output_type":"stream","text":["/content/drive/My Drive/Colab Notebooks/ISRLU/my_model\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"1SUUlS6GyjB1","colab_type":"code","colab":{}},"source":["os.chdir('drive/My Drive/Colab Notebooks/ISRLU')"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"QtIarGoMb94W","colab_type":"code","colab":{}},"source":["os.chdir('my_model')"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"NbVuUK_kcC9c","colab_type":"code","colab":{}},"source":["model.save('isrlu_model1.h5')"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"G3V8szOpcbW-","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"fef6e3df-8aed-4b42-89ec-881d7a2a66bd","executionInfo":{"status":"ok","timestamp":1577457578486,"user_tz":-330,"elapsed":2740,"user":{"displayName":"Vineeth M","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mAmiLzUgr5FFsdKcniKlQh-PNfLmU0Lo9V-rUvb=s64","userId":"07930221275951267559"}}},"source":["model.save('.',save_format = 'tf')"],"execution_count":21,"outputs":[{"output_type":"stream","text":["INFO:tensorflow:Assets written to: ./assets\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"7wrew7qJcnFj","colab_type":"code","colab":{}},"source":["new_model = tf.keras.models.load_model(\"/content/drive/My Drive/Colab Notebooks/ISRLU/my_model\")"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"AtHxGc-NeR72","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":493},"outputId":"616895f2-fc05-416f-9e82-acfe99c9e565","executionInfo":{"status":"ok","timestamp":1577457617443,"user_tz":-330,"elapsed":1935,"user":{"displayName":"Vineeth M","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mAmiLzUgr5FFsdKcniKlQh-PNfLmU0Lo9V-rUvb=s64","userId":"07930221275951267559"}}},"source":["new_model.summary()"],"execution_count":23,"outputs":[{"output_type":"stream","text":["Model: \"sequential_1\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","conv2d (Conv2D)              (None, 26, 26, 8)         80        \n","_________________________________________________________________\n","max_pooling2d (MaxPooling2D) (None, 13, 13, 8)         0         \n","_________________________________________________________________\n","conv2d_1 (Conv2D)            (None, 11, 11, 16)        1168      \n","_________________________________________________________________\n","max_pooling2d_1 (MaxPooling2 (None, 5, 5, 16)          0         \n","_________________________________________________________________\n","dropout (Dropout)            (None, 5, 5, 16)          0         \n","_________________________________________________________________\n","flatten (Flatten)            (None, 400)               0         \n","_________________________________________________________________\n","dense (Dense)                (None, 32)                12832     \n","_________________________________________________________________\n","activation_1 (Activation)    (None, 32)                0         \n","_________________________________________________________________\n","dropout_1 (Dropout)          (None, 32)                0         \n","_________________________________________________________________\n","dense_1 (Dense)              (None, 10)                330       \n","=================================================================\n","Total params: 14,410\n","Trainable params: 14,410\n","Non-trainable params: 0\n","_________________________________________________________________\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"akM4SC2reYDW","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":170},"outputId":"038fcc64-1c02-46fa-ae94-e6698e1fa67b","executionInfo":{"status":"ok","timestamp":1577457626219,"user_tz":-330,"elapsed":1523,"user":{"displayName":"Vineeth M","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mAmiLzUgr5FFsdKcniKlQh-PNfLmU0Lo9V-rUvb=s64","userId":"07930221275951267559"}}},"source":["prediction = new_model.predict(x_test[130:131])\n","print('Prediction Score:\\n',prediction[0])\n","thresholded = (prediction>0.5)*1\n","print('\\nThresholded Score:\\n',thresholded[0])\n","print('\\nPredicted Digit:\\n',np.where(thresholded == 1)[1][0])"],"execution_count":24,"outputs":[{"output_type":"stream","text":["Prediction Score:\n"," [1.0346926e-06 9.9439690e-10 5.5240540e-10 7.6124454e-11 7.5059091e-08\n"," 2.2506878e-05 9.9997437e-01 5.8716326e-12 1.8921942e-06 1.2038242e-07]\n","\n","Thresholded Score:\n"," [0 0 0 0 0 0 1 0 0 0]\n","\n","Predicted Digit:\n"," 6\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"lxCd6rfGe2Ku","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"587a40c3-a8c3-4b80-9266-98c594cbd24c","executionInfo":{"status":"ok","timestamp":1577457763085,"user_tz":-330,"elapsed":1889,"user":{"displayName":"Vineeth M","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mAmiLzUgr5FFsdKcniKlQh-PNfLmU0Lo9V-rUvb=s64","userId":"07930221275951267559"}}},"source":["print(new_model.output_names)"],"execution_count":29,"outputs":[{"output_type":"stream","text":["['dense_1']\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"zMMlEjafuVSJ","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":493},"outputId":"39c6c66f-b079-4735-d7e0-8d6241ce0a05","executionInfo":{"status":"ok","timestamp":1577457799789,"user_tz":-330,"elapsed":2483,"user":{"displayName":"Vineeth M","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mAmiLzUgr5FFsdKcniKlQh-PNfLmU0Lo9V-rUvb=s64","userId":"07930221275951267559"}}},"source":["new_model.summary()"],"execution_count":30,"outputs":[{"output_type":"stream","text":["Model: \"sequential_1\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","conv2d (Conv2D)              (None, 26, 26, 8)         80        \n","_________________________________________________________________\n","max_pooling2d (MaxPooling2D) (None, 13, 13, 8)         0         \n","_________________________________________________________________\n","conv2d_1 (Conv2D)            (None, 11, 11, 16)        1168      \n","_________________________________________________________________\n","max_pooling2d_1 (MaxPooling2 (None, 5, 5, 16)          0         \n","_________________________________________________________________\n","dropout (Dropout)            (None, 5, 5, 16)          0         \n","_________________________________________________________________\n","flatten (Flatten)            (None, 400)               0         \n","_________________________________________________________________\n","dense (Dense)                (None, 32)                12832     \n","_________________________________________________________________\n","activation_1 (Activation)    (None, 32)                0         \n","_________________________________________________________________\n","dropout_1 (Dropout)          (None, 32)                0         \n","_________________________________________________________________\n","dense_1 (Dense)              (None, 10)                330       \n","=================================================================\n","Total params: 14,410\n","Trainable params: 14,410\n","Non-trainable params: 0\n","_________________________________________________________________\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"qHFhjkUDz8Ta","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]}]}