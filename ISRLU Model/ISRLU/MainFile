{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"MainFile","provenance":[],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"cell_type":"code","metadata":{"id":"QQmJBLOZvVKE","colab_type":"code","outputId":"7e82eb8d-275a-4aee-e437-c0ebfb1202e9","executionInfo":{"status":"ok","timestamp":1577525060067,"user_tz":-330,"elapsed":1462,"user":{"displayName":"Vineeth M","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mAmiLzUgr5FFsdKcniKlQh-PNfLmU0Lo9V-rUvb=s64","userId":"07930221275951267559"}},"colab":{"base_uri":"https://localhost:8080/","height":51}},"source":["import os\n","os.chdir('drive/My Drive/Colab Notebooks/ISRLU')\n","root_dir = os.getcwd()\n","model_dir = os.path.join(root_dir,'my_model')\n","print(model_dir)\n","final_dir = os.path.join(root_dir,'final_model')\n","print(final_dir)"],"execution_count":11,"outputs":[{"output_type":"stream","text":["/content/drive/My Drive/Colab Notebooks/ISRLU/my_model\n","/content/drive/My Drive/Colab Notebooks/ISRLU/final_model\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"WDm_TFvNEgj3","colab_type":"code","outputId":"1693d7df-20a0-476c-9642-55bffba6eaf4","executionInfo":{"status":"ok","timestamp":1577524422561,"user_tz":-330,"elapsed":7849,"user":{"displayName":"Vineeth M","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mAmiLzUgr5FFsdKcniKlQh-PNfLmU0Lo9V-rUvb=s64","userId":"07930221275951267559"}},"colab":{"base_uri":"https://localhost:8080/","height":306}},"source":["!nvidia-smi"],"execution_count":4,"outputs":[{"output_type":"stream","text":["Sat Dec 28 09:13:36 2019       \n","+-----------------------------------------------------------------------------+\n","| NVIDIA-SMI 440.44       Driver Version: 418.67       CUDA Version: 10.1     |\n","|-------------------------------+----------------------+----------------------+\n","| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\n","| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\n","|===============================+======================+======================|\n","|   0  Tesla P100-PCIE...  Off  | 00000000:00:04.0 Off |                    0 |\n","| N/A   38C    P0    25W / 250W |      0MiB / 16280MiB |      0%      Default |\n","+-------------------------------+----------------------+----------------------+\n","                                                                               \n","+-----------------------------------------------------------------------------+\n","| Processes:                                                       GPU Memory |\n","|  GPU       PID   Type   Process name                             Usage      |\n","|=============================================================================|\n","|  No running processes found                                                 |\n","+-----------------------------------------------------------------------------+\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"BfYY_FugFdqf","colab_type":"code","outputId":"b62aa7a6-ae16-4a19-be92-b4f87b8a3518","executionInfo":{"status":"ok","timestamp":1577524514335,"user_tz":-330,"elapsed":75433,"user":{"displayName":"Vineeth M","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mAmiLzUgr5FFsdKcniKlQh-PNfLmU0Lo9V-rUvb=s64","userId":"07930221275951267559"}},"colab":{"base_uri":"https://localhost:8080/","height":1000}},"source":["!pip install pillow matplotlib\n","!pip install tensorflow-gpu==2.0.0"],"execution_count":6,"outputs":[{"output_type":"stream","text":["Requirement already satisfied: pillow in /usr/local/lib/python3.6/dist-packages (4.3.0)\n","Requirement already satisfied: matplotlib in /usr/local/lib/python3.6/dist-packages (3.1.2)\n","Requirement already satisfied: olefile in /usr/local/lib/python3.6/dist-packages (from pillow) (0.46)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.6/dist-packages (from matplotlib) (0.10.0)\n","Requirement already satisfied: numpy>=1.11 in /usr/local/lib/python3.6/dist-packages (from matplotlib) (1.17.4)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.6/dist-packages (from matplotlib) (1.1.0)\n","Requirement already satisfied: python-dateutil>=2.1 in /usr/local/lib/python3.6/dist-packages (from matplotlib) (2.6.1)\n","Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /usr/local/lib/python3.6/dist-packages (from matplotlib) (2.4.5)\n","Requirement already satisfied: six in /usr/local/lib/python3.6/dist-packages (from cycler>=0.10->matplotlib) (1.12.0)\n","Requirement already satisfied: setuptools in /usr/local/lib/python3.6/dist-packages (from kiwisolver>=1.0.1->matplotlib) (42.0.2)\n","Collecting tensorflow-gpu==2.0.0\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/25/44/47f0722aea081697143fbcf5d2aa60d1aee4aaacb5869aee2b568974777b/tensorflow_gpu-2.0.0-cp36-cp36m-manylinux2010_x86_64.whl (380.8MB)\n","\u001b[K     |████████████████████████████████| 380.8MB 43kB/s \n","\u001b[?25hRequirement already satisfied: keras-preprocessing>=1.0.5 in /usr/local/lib/python3.6/dist-packages (from tensorflow-gpu==2.0.0) (1.1.0)\n","Requirement already satisfied: keras-applications>=1.0.8 in /usr/local/lib/python3.6/dist-packages (from tensorflow-gpu==2.0.0) (1.0.8)\n","Requirement already satisfied: termcolor>=1.1.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow-gpu==2.0.0) (1.1.0)\n","Requirement already satisfied: opt-einsum>=2.3.2 in /usr/local/lib/python3.6/dist-packages (from tensorflow-gpu==2.0.0) (3.1.0)\n","Requirement already satisfied: gast==0.2.2 in /usr/local/lib/python3.6/dist-packages (from tensorflow-gpu==2.0.0) (0.2.2)\n","Collecting tensorboard<2.1.0,>=2.0.0\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/76/54/99b9d5d52d5cb732f099baaaf7740403e83fe6b0cedde940fabd2b13d75a/tensorboard-2.0.2-py3-none-any.whl (3.8MB)\n","\u001b[K     |████████████████████████████████| 3.8MB 28.8MB/s \n","\u001b[?25hRequirement already satisfied: absl-py>=0.7.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow-gpu==2.0.0) (0.8.1)\n","Requirement already satisfied: protobuf>=3.6.1 in /usr/local/lib/python3.6/dist-packages (from tensorflow-gpu==2.0.0) (3.10.0)\n","Requirement already satisfied: wrapt>=1.11.1 in /usr/local/lib/python3.6/dist-packages (from tensorflow-gpu==2.0.0) (1.11.2)\n","Requirement already satisfied: grpcio>=1.8.6 in /usr/local/lib/python3.6/dist-packages (from tensorflow-gpu==2.0.0) (1.15.0)\n","Requirement already satisfied: numpy<2.0,>=1.16.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow-gpu==2.0.0) (1.17.4)\n","Requirement already satisfied: astor>=0.6.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow-gpu==2.0.0) (0.8.1)\n","Requirement already satisfied: six>=1.10.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow-gpu==2.0.0) (1.12.0)\n","Collecting tensorflow-estimator<2.1.0,>=2.0.0\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/fc/08/8b927337b7019c374719145d1dceba21a8bb909b93b1ad6f8fb7d22c1ca1/tensorflow_estimator-2.0.1-py2.py3-none-any.whl (449kB)\n","\u001b[K     |████████████████████████████████| 450kB 49.0MB/s \n","\u001b[?25hRequirement already satisfied: google-pasta>=0.1.6 in /usr/local/lib/python3.6/dist-packages (from tensorflow-gpu==2.0.0) (0.1.8)\n","Requirement already satisfied: wheel>=0.26 in /usr/local/lib/python3.6/dist-packages (from tensorflow-gpu==2.0.0) (0.33.6)\n","Requirement already satisfied: h5py in /usr/local/lib/python3.6/dist-packages (from keras-applications>=1.0.8->tensorflow-gpu==2.0.0) (2.8.0)\n","Collecting google-auth<2,>=1.6.3\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/36/f8/84b5771faec3eba9fe0c91c8c5896364a8ba08852c0dea5ad2025026dd95/google_auth-1.10.0-py2.py3-none-any.whl (76kB)\n","\u001b[K     |████████████████████████████████| 81kB 9.9MB/s \n","\u001b[?25hRequirement already satisfied: markdown>=2.6.8 in /usr/local/lib/python3.6/dist-packages (from tensorboard<2.1.0,>=2.0.0->tensorflow-gpu==2.0.0) (3.1.1)\n","Requirement already satisfied: requests<3,>=2.21.0 in /usr/local/lib/python3.6/dist-packages (from tensorboard<2.1.0,>=2.0.0->tensorflow-gpu==2.0.0) (2.21.0)\n","Requirement already satisfied: werkzeug>=0.11.15 in /usr/local/lib/python3.6/dist-packages (from tensorboard<2.1.0,>=2.0.0->tensorflow-gpu==2.0.0) (0.16.0)\n","Requirement already satisfied: google-auth-oauthlib<0.5,>=0.4.1 in /usr/local/lib/python3.6/dist-packages (from tensorboard<2.1.0,>=2.0.0->tensorflow-gpu==2.0.0) (0.4.1)\n","Requirement already satisfied: setuptools>=41.0.0 in /usr/local/lib/python3.6/dist-packages (from tensorboard<2.1.0,>=2.0.0->tensorflow-gpu==2.0.0) (42.0.2)\n","Requirement already satisfied: cachetools<5.0,>=2.0.0 in /usr/local/lib/python3.6/dist-packages (from google-auth<2,>=1.6.3->tensorboard<2.1.0,>=2.0.0->tensorflow-gpu==2.0.0) (4.0.0)\n","Requirement already satisfied: rsa<4.1,>=3.1.4 in /usr/local/lib/python3.6/dist-packages (from google-auth<2,>=1.6.3->tensorboard<2.1.0,>=2.0.0->tensorflow-gpu==2.0.0) (4.0)\n","Requirement already satisfied: pyasn1-modules>=0.2.1 in /usr/local/lib/python3.6/dist-packages (from google-auth<2,>=1.6.3->tensorboard<2.1.0,>=2.0.0->tensorflow-gpu==2.0.0) (0.2.7)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.6/dist-packages (from requests<3,>=2.21.0->tensorboard<2.1.0,>=2.0.0->tensorflow-gpu==2.0.0) (2019.11.28)\n","Requirement already satisfied: urllib3<1.25,>=1.21.1 in /usr/local/lib/python3.6/dist-packages (from requests<3,>=2.21.0->tensorboard<2.1.0,>=2.0.0->tensorflow-gpu==2.0.0) (1.24.3)\n","Requirement already satisfied: idna<2.9,>=2.5 in /usr/local/lib/python3.6/dist-packages (from requests<3,>=2.21.0->tensorboard<2.1.0,>=2.0.0->tensorflow-gpu==2.0.0) (2.8)\n","Requirement already satisfied: chardet<3.1.0,>=3.0.2 in /usr/local/lib/python3.6/dist-packages (from requests<3,>=2.21.0->tensorboard<2.1.0,>=2.0.0->tensorflow-gpu==2.0.0) (3.0.4)\n","Requirement already satisfied: requests-oauthlib>=0.7.0 in /usr/local/lib/python3.6/dist-packages (from google-auth-oauthlib<0.5,>=0.4.1->tensorboard<2.1.0,>=2.0.0->tensorflow-gpu==2.0.0) (1.3.0)\n","Requirement already satisfied: pyasn1>=0.1.3 in /usr/local/lib/python3.6/dist-packages (from rsa<4.1,>=3.1.4->google-auth<2,>=1.6.3->tensorboard<2.1.0,>=2.0.0->tensorflow-gpu==2.0.0) (0.4.8)\n","Requirement already satisfied: oauthlib>=3.0.0 in /usr/local/lib/python3.6/dist-packages (from requests-oauthlib>=0.7.0->google-auth-oauthlib<0.5,>=0.4.1->tensorboard<2.1.0,>=2.0.0->tensorflow-gpu==2.0.0) (3.1.0)\n","\u001b[31mERROR: tensorflow 1.15.0 has requirement tensorboard<1.16.0,>=1.15.0, but you'll have tensorboard 2.0.2 which is incompatible.\u001b[0m\n","\u001b[31mERROR: tensorflow 1.15.0 has requirement tensorflow-estimator==1.15.1, but you'll have tensorflow-estimator 2.0.1 which is incompatible.\u001b[0m\n","\u001b[31mERROR: tensorboard 2.0.2 has requirement grpcio>=1.24.3, but you'll have grpcio 1.15.0 which is incompatible.\u001b[0m\n","\u001b[31mERROR: google-colab 1.0.0 has requirement google-auth~=1.4.0, but you'll have google-auth 1.10.0 which is incompatible.\u001b[0m\n","Installing collected packages: google-auth, tensorboard, tensorflow-estimator, tensorflow-gpu\n","  Found existing installation: google-auth 1.4.2\n","    Uninstalling google-auth-1.4.2:\n","      Successfully uninstalled google-auth-1.4.2\n","  Found existing installation: tensorboard 1.15.0\n","    Uninstalling tensorboard-1.15.0:\n","      Successfully uninstalled tensorboard-1.15.0\n","  Found existing installation: tensorflow-estimator 1.15.1\n","    Uninstalling tensorflow-estimator-1.15.1:\n","      Successfully uninstalled tensorflow-estimator-1.15.1\n","Successfully installed google-auth-1.10.0 tensorboard-2.0.2 tensorflow-estimator-2.0.1 tensorflow-gpu-2.0.0\n"],"name":"stdout"},{"output_type":"display_data","data":{"application/vnd.colab-display-data+json":{"pip_warning":{"packages":["google","tensorboard","tensorflow","tensorflow_core","tensorflow_estimator"]}}},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"EAOs4U6aGt_R","colab_type":"code","outputId":"2b7a0287-e3f4-4a58-c88f-6f6cf627e299","executionInfo":{"status":"ok","timestamp":1577524640861,"user_tz":-330,"elapsed":2767,"user":{"displayName":"Vineeth M","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mAmiLzUgr5FFsdKcniKlQh-PNfLmU0Lo9V-rUvb=s64","userId":"07930221275951267559"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["import tensorflow as tf\n","print(\"Tensorflow version: \", tf.version.VERSION)"],"execution_count":1,"outputs":[{"output_type":"stream","text":["Tensorflow version:  2.0.0\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"vw7igD7aGy2v","colab_type":"code","outputId":"0f42b3b9-4407-442c-9328-c419a3f6f94d","executionInfo":{"status":"ok","timestamp":1577524997129,"user_tz":-330,"elapsed":20583,"user":{"displayName":"Vineeth M","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mAmiLzUgr5FFsdKcniKlQh-PNfLmU0Lo9V-rUvb=s64","userId":"07930221275951267559"}},"colab":{"base_uri":"https://localhost:8080/","height":1000}},"source":["%%bash\n","wget https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64/nvidia-machine-learning-repo-ubuntu1804_1.0.0-1_amd64.deb\n","\n","dpkg -i nvidia-machine-learning-repo-*.deb\n","apt-get update\n","\n","sudo apt-get install libnvinfer5"],"execution_count":2,"outputs":[{"output_type":"stream","text":["Selecting previously unselected package nvidia-machine-learning-repo-ubuntu1804.\n","(Reading database ... 145674 files and directories currently installed.)\n","Preparing to unpack nvidia-machine-learning-repo-ubuntu1804_1.0.0-1_amd64.deb ...\n","Unpacking nvidia-machine-learning-repo-ubuntu1804 (1.0.0-1) ...\n","Setting up nvidia-machine-learning-repo-ubuntu1804 (1.0.0-1) ...\n","Get:1 http://security.ubuntu.com/ubuntu bionic-security InRelease [88.7 kB]\n","Hit:2 http://archive.ubuntu.com/ubuntu bionic InRelease\n","Get:3 http://archive.ubuntu.com/ubuntu bionic-updates InRelease [88.7 kB]\n","Get:4 http://archive.ubuntu.com/ubuntu bionic-backports InRelease [74.6 kB]\n","Hit:5 http://ppa.launchpad.net/graphics-drivers/ppa/ubuntu bionic InRelease\n","Get:6 http://ppa.launchpad.net/marutter/c2d4u3.5/ubuntu bionic InRelease [15.4 kB]\n","Ign:7 http://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64  InRelease\n","Get:8 http://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64  Release [564 B]\n","Get:9 http://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64  Release.gpg [833 B]\n","Ign:10 https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64  InRelease\n","Hit:11 https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64  Release\n","Get:12 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [761 kB]\n","Get:13 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 Packages [1,057 kB]\n","Get:14 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 Packages [1,322 kB]\n","Get:15 https://cloud.r-project.org/bin/linux/ubuntu bionic-cran35/ InRelease [3,626 B]\n","Get:16 http://ppa.launchpad.net/marutter/c2d4u3.5/ubuntu bionic/main Sources [1,747 kB]\n","Get:17 http://ppa.launchpad.net/marutter/c2d4u3.5/ubuntu bionic/main amd64 Packages [843 kB]\n","Get:18 http://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64  Packages [30.4 kB]\n","Get:20 https://cloud.r-project.org/bin/linux/ubuntu bionic-cran35/ Packages [81.2 kB]\n","Fetched 6,115 kB in 2s (3,066 kB/s)\n","Reading package lists...\n","Reading package lists...\n","Building dependency tree...\n","Reading state information...\n","The following package was automatically installed and is no longer required:\n","  libnvidia-common-430\n","Use 'sudo apt autoremove' to remove it.\n","The following NEW packages will be installed:\n","  libnvinfer5\n","0 upgraded, 1 newly installed, 0 to remove and 19 not upgraded.\n","Need to get 46.7 MB of archives.\n","After this operation, 163 MB of additional disk space will be used.\n","Get:1 http://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64  libnvinfer5 5.1.5-1+cuda10.1 [46.7 MB]\n","Fetched 46.7 MB in 1s (57.2 MB/s)\n","Selecting previously unselected package libnvinfer5.\r\n","(Reading database ... \r(Reading database ... 5%\r(Reading database ... 10%\r(Reading database ... 15%\r(Reading database ... 20%\r(Reading database ... 25%\r(Reading database ... 30%\r(Reading database ... 35%\r(Reading database ... 40%\r(Reading database ... 45%\r(Reading database ... 50%\r(Reading database ... 55%\r(Reading database ... 60%\r(Reading database ... 65%\r(Reading database ... 70%\r(Reading database ... 75%\r(Reading database ... 80%\r(Reading database ... 85%\r(Reading database ... 90%\r(Reading database ... 95%\r(Reading database ... 100%\r(Reading database ... 145677 files and directories currently installed.)\r\n","Preparing to unpack .../libnvinfer5_5.1.5-1+cuda10.1_amd64.deb ...\r\n","Unpacking libnvinfer5 (5.1.5-1+cuda10.1) ...\r\n","Setting up libnvinfer5 (5.1.5-1+cuda10.1) ...\r\n","Processing triggers for libc-bin (2.27-3ubuntu1) ...\r\n"],"name":"stdout"},{"output_type":"stream","text":["--2019-12-28 09:22:56--  https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64/nvidia-machine-learning-repo-ubuntu1804_1.0.0-1_amd64.deb\n","Resolving developer.download.nvidia.com (developer.download.nvidia.com)... 192.229.221.58, 2606:2800:233:ef6:15dd:1ece:1d50:1e1\n","Connecting to developer.download.nvidia.com (developer.download.nvidia.com)|192.229.221.58|:443... connected.\n","HTTP request sent, awaiting response... 200 OK\n","Length: 2926 (2.9K) [application/x-deb]\n","Saving to: ‘nvidia-machine-learning-repo-ubuntu1804_1.0.0-1_amd64.deb’\n","\n","     0K ..                                                    100%  163M=0s\n","\n","2019-12-28 09:22:56 (163 MB/s) - ‘nvidia-machine-learning-repo-ubuntu1804_1.0.0-1_amd64.deb’ saved [2926/2926]\n","\n","W: Target Packages (Packages) is configured multiple times in /etc/apt/sources.list.d/nvidia-machine-learning.list:1 and /etc/apt/sources.list.d/nvidia-ml.list:1\n","W: Target Packages (Packages) is configured multiple times in /etc/apt/sources.list.d/nvidia-machine-learning.list:1 and /etc/apt/sources.list.d/nvidia-ml.list:1\n","debconf: unable to initialize frontend: Dialog\n","debconf: (No usable dialog-like program is installed, so the dialog based frontend cannot be used. at /usr/share/perl5/Debconf/FrontEnd/Dialog.pm line 76, <> line 1.)\n","debconf: falling back to frontend: Readline\n","debconf: unable to initialize frontend: Readline\n","debconf: (This frontend requires a controlling tty.)\n","debconf: falling back to frontend: Teletype\n","dpkg-preconfigure: unable to re-open stdin: \n","W: Target Packages (Packages) is configured multiple times in /etc/apt/sources.list.d/nvidia-machine-learning.list:1 and /etc/apt/sources.list.d/nvidia-ml.list:1\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"UZm5jlVLG0js","colab_type":"code","outputId":"1af9f73b-1181-4aa4-c40a-433f602e9ce3","executionInfo":{"status":"ok","timestamp":1577525013699,"user_tz":-330,"elapsed":7241,"user":{"displayName":"Vineeth M","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mAmiLzUgr5FFsdKcniKlQh-PNfLmU0Lo9V-rUvb=s64","userId":"07930221275951267559"}},"colab":{"base_uri":"https://localhost:8080/","height":51}},"source":["print(\"TensorRT version: \")\n","!dpkg -l | grep nvinfer"],"execution_count":3,"outputs":[{"output_type":"stream","text":["TensorRT version: \n","ii  libnvinfer5                             5.1.5-1+cuda10.1                                  amd64        TensorRT runtime libraries\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"UExjiWeeG4B7","colab_type":"code","outputId":"f55e7616-7dbc-4ccc-eb26-ea9ebcce3609","executionInfo":{"status":"ok","timestamp":1577525016249,"user_tz":-330,"elapsed":3614,"user":{"displayName":"Vineeth M","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mAmiLzUgr5FFsdKcniKlQh-PNfLmU0Lo9V-rUvb=s64","userId":"07930221275951267559"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["from tensorflow.python.client import device_lib\n","\n","def check_tensor_core_gpu_present():\n","    local_device_protos = device_lib.list_local_devices()\n","    for line in local_device_protos:\n","        if \"compute capability\" in str(line):\n","            compute_capability = float(line.physical_device_desc.split(\"compute capability: \")[-1])\n","            if compute_capability>=7.0:\n","                return True\n","    \n","print(\"Tensor Core GPU Present:\", check_tensor_core_gpu_present())\n","tensor_core_gpu = check_tensor_core_gpu_present()"],"execution_count":4,"outputs":[{"output_type":"stream","text":["Tensor Core GPU Present: None\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"o7HoDygrG48g","colab_type":"code","colab":{}},"source":["from __future__ import absolute_import, division, print_function, unicode_literals\n","import os\n","import time\n","\n","import numpy as np\n","import matplotlib.pyplot as plt\n","\n","import tensorflow as tf\n","from tensorflow import keras\n","from tensorflow.python.compiler.tensorrt import trt_convert as trt\n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"lsTkOQgsG4_Y","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"aa66acdf-4177-4ab8-e080-9b998c7be6a8","executionInfo":{"status":"ok","timestamp":1577525022699,"user_tz":-330,"elapsed":1852,"user":{"displayName":"Vineeth M","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mAmiLzUgr5FFsdKcniKlQh-PNfLmU0Lo9V-rUvb=s64","userId":"07930221275951267559"}}},"source":["#importing the packages\n","import numpy as np\n","import keras\n","from tensorflow.keras.datasets import mnist\n","from tensorflow.keras.models import Sequential\n","from tensorflow.keras.layers import Dense, Dropout, Flatten, Conv2D, MaxPooling2D, Activation\n","from keras import backend as K\n","from keras.preprocessing import image\n","from keras.applications.mobilenet import MobileNet\n","from keras.applications.vgg16 import preprocess_input, decode_predictions\n","from keras.models import Model\n","import timeit\n","import math\n","import warnings\n","import tensorflow as tf\n","from keras.utils.generic_utils import get_custom_objects\n","warnings.filterwarnings('ignore')\n","#tf.enable_eager_execution()"],"execution_count":6,"outputs":[{"output_type":"stream","text":["Using TensorFlow backend.\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"B-uqn4uPG5By","colab_type":"code","outputId":"403429e0-0050-4137-b178-dc15bab7573b","executionInfo":{"status":"ok","timestamp":1577525026058,"user_tz":-330,"elapsed":1876,"user":{"displayName":"Vineeth M","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mAmiLzUgr5FFsdKcniKlQh-PNfLmU0Lo9V-rUvb=s64","userId":"07930221275951267559"}},"colab":{"base_uri":"https://localhost:8080/","height":102}},"source":["#preparing the dataset\n","batch_size = 128\n","num_classes = 10\n","epochs = 15\n","\n","# input image dimensions\n","img_rows, img_cols = 28, 28\n","\n","# the data, shuffled and split between train and test sets\n","(x_train, y_train), (x_test, y_test) = mnist.load_data()\n","\n","if K.image_data_format() == 'channels_first':\n","    x_train = x_train.reshape(x_train.shape[0], 1, img_rows, img_cols)\n","    x_test = x_test.reshape(x_test.shape[0], 1, img_rows, img_cols)\n","    input_shape = (1, img_rows, img_cols)\n","else:\n","    x_train = x_train.reshape(x_train.shape[0], img_rows, img_cols, 1)\n","    x_test = x_test.reshape(x_test.shape[0], img_rows, img_cols, 1)\n","    input_shape = (img_rows, img_cols, 1)\n","\n","x_train = x_train.astype('float32')\n","x_test = x_test.astype('float32')\n","x_train /= 255\n","x_test /= 255\n","print('x_train shape:', x_train.shape)\n","print(x_train.shape[0], 'train samples')\n","print(x_test.shape[0], 'test samples')\n","\n","# convert class vectors to binary class matrices\n","y_train = keras.utils.to_categorical(y_train, num_classes)\n","y_test = keras.utils.to_categorical(y_test, num_classes)"],"execution_count":7,"outputs":[{"output_type":"stream","text":["Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/mnist.npz\n","11493376/11490434 [==============================] - 0s 0us/step\n","x_train shape: (60000, 28, 28, 1)\n","60000 train samples\n","10000 test samples\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"kSDrvTLuG5Ea","colab_type":"code","colab":{}},"source":["@tf.function\n","def isrlu(x, alpha = 3):\n","  if tf.math.sign(x) == -1:\n","    return (x/(tf.math.sqrt(1 + alpha * tf.math.square(x, x))))\n","  else:\n","    return x\n","\n","get_custom_objects().update({'isrlu':Activation(isrlu)})"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"FMNo8FhWHq4z","colab_type":"code","outputId":"5555fd73-ac64-4d23-8a2b-90288331fc5e","executionInfo":{"status":"ok","timestamp":1577525039292,"user_tz":-330,"elapsed":5904,"user":{"displayName":"Vineeth M","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mAmiLzUgr5FFsdKcniKlQh-PNfLmU0Lo9V-rUvb=s64","userId":"07930221275951267559"}},"colab":{"base_uri":"https://localhost:8080/","height":85}},"source":["!pip install pyyaml h5py\n","\n","from __future__ import absolute_import, division, print_function, unicode_literals\n"],"execution_count":9,"outputs":[{"output_type":"stream","text":["Requirement already satisfied: pyyaml in /usr/local/lib/python3.6/dist-packages (3.13)\n","Requirement already satisfied: h5py in /usr/local/lib/python3.6/dist-packages (2.8.0)\n","Requirement already satisfied: numpy>=1.7 in /usr/local/lib/python3.6/dist-packages (from h5py) (1.17.4)\n","Requirement already satisfied: six in /usr/local/lib/python3.6/dist-packages (from h5py) (1.12.0)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"VH8lwfXmIq6G","colab_type":"code","colab":{}},"source":["new_model = tf.keras.models.load_model(model_dir)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"ckyVbhCtIq8c","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":493},"outputId":"66f1c233-e0db-4883-9401-d732232dec0d","executionInfo":{"status":"ok","timestamp":1577525081064,"user_tz":-330,"elapsed":1399,"user":{"displayName":"Vineeth M","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mAmiLzUgr5FFsdKcniKlQh-PNfLmU0Lo9V-rUvb=s64","userId":"07930221275951267559"}}},"source":["new_model.summary()"],"execution_count":13,"outputs":[{"output_type":"stream","text":["Model: \"sequential_1\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","conv2d (Conv2D)              (None, 26, 26, 8)         80        \n","_________________________________________________________________\n","max_pooling2d (MaxPooling2D) (None, 13, 13, 8)         0         \n","_________________________________________________________________\n","conv2d_1 (Conv2D)            (None, 11, 11, 16)        1168      \n","_________________________________________________________________\n","max_pooling2d_1 (MaxPooling2 (None, 5, 5, 16)          0         \n","_________________________________________________________________\n","dropout (Dropout)            (None, 5, 5, 16)          0         \n","_________________________________________________________________\n","flatten (Flatten)            (None, 400)               0         \n","_________________________________________________________________\n","dense (Dense)                (None, 32)                12832     \n","_________________________________________________________________\n","activation_1 (Activation)    (None, 32)                0         \n","_________________________________________________________________\n","dropout_1 (Dropout)          (None, 32)                0         \n","_________________________________________________________________\n","dense_1 (Dense)              (None, 10)                330       \n","=================================================================\n","Total params: 14,410\n","Trainable params: 14,410\n","Non-trainable params: 0\n","_________________________________________________________________\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"EVBJaxnKM-AH","colab_type":"text"},"source":["Inference with TF32"]},{"cell_type":"code","metadata":{"id":"EaCtFwhdKfwG","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":265},"outputId":"642f6537-9033-4096-8a4c-13a67fa32c01","executionInfo":{"status":"ok","timestamp":1577525085844,"user_tz":-330,"elapsed":1728,"user":{"displayName":"Vineeth M","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mAmiLzUgr5FFsdKcniKlQh-PNfLmU0Lo9V-rUvb=s64","userId":"07930221275951267559"}}},"source":["#prediction\n","import pylab as plt\n","\n","plt.imshow(x_test[160:161].reshape(28,28),cmap='gray')\n","plt.show()"],"execution_count":14,"outputs":[{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"VZTut44zKXfC","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":187},"outputId":"d4b19379-2107-41c9-f173-5d58aa5ac2c1","executionInfo":{"status":"ok","timestamp":1577525095367,"user_tz":-330,"elapsed":7399,"user":{"displayName":"Vineeth M","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mAmiLzUgr5FFsdKcniKlQh-PNfLmU0Lo9V-rUvb=s64","userId":"07930221275951267559"}}},"source":["prediction = new_model.predict(x_test[160:161])\n","print('Prediction Score:\\n',prediction[0])\n","thresholded = (prediction>0.5)*1\n","print('\\nThresholded Score:\\n',thresholded[0])\n","print('\\nPredicted Digit:\\n',np.where(thresholded == 1)[1][0])"],"execution_count":15,"outputs":[{"output_type":"stream","text":["Prediction Score:\n"," [1.08550173e-08 3.06332950e-05 1.86836900e-07 6.93995599e-12\n"," 9.99965549e-01 8.20324164e-09 2.84499538e-06 5.00122859e-08\n"," 6.63625428e-07 1.00620476e-07]\n","\n","Thresholded Score:\n"," [0 0 0 0 1 0 0 0 0 0]\n","\n","Predicted Digit:\n"," 4\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"LRIo6OUBKa_P","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"1259ba2b-e595-4f05-a817-44a663d99830","executionInfo":{"status":"ok","timestamp":1577525109359,"user_tz":-330,"elapsed":1498,"user":{"displayName":"Vineeth M","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mAmiLzUgr5FFsdKcniKlQh-PNfLmU0Lo9V-rUvb=s64","userId":"07930221275951267559"}}},"source":["input_reg = str(new_model.input_names)\n","print(input_reg)\n","#print(type(input_reg))"],"execution_count":16,"outputs":[{"output_type":"stream","text":["['conv2d_input']\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"d0VORuYeKlkj","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"175b4256-4dba-4a89-dd59-f14b7d3eaae0","executionInfo":{"status":"ok","timestamp":1577525113866,"user_tz":-330,"elapsed":1547,"user":{"displayName":"Vineeth M","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mAmiLzUgr5FFsdKcniKlQh-PNfLmU0Lo9V-rUvb=s64","userId":"07930221275951267559"}}},"source":["output_reg = str(new_model.output_names)\n","print(output_reg)\n","#print(type(output_reg))"],"execution_count":17,"outputs":[{"output_type":"stream","text":["['dense_1']\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"VMhVtxQDKpHz","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":204},"outputId":"bac2d5ca-0d45-44c1-ac7b-588b823e0e1d","executionInfo":{"status":"ok","timestamp":1577525123358,"user_tz":-330,"elapsed":1344,"user":{"displayName":"Vineeth M","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mAmiLzUgr5FFsdKcniKlQh-PNfLmU0Lo9V-rUvb=s64","userId":"07930221275951267559"}}},"source":["for i in new_model.layers:\n","  print(str(i)[49:-26])\n","print(\"No. of layers : \",len(new_model.layers))"],"execution_count":18,"outputs":[{"output_type":"stream","text":["Conv2D\n","MaxPooling2D\n","Conv2D\n","MaxPooling2D\n","Dropout\n","Flatten\n","Dense\n","Activation\n","Dropout\n","Dense\n","No. of layers :  10\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"PAjBSBDRLMwk","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":105},"outputId":"59fd7116-6c02-41ce-cfe3-b7df13feda78","executionInfo":{"status":"ok","timestamp":1577525133628,"user_tz":-330,"elapsed":3361,"user":{"displayName":"Vineeth M","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mAmiLzUgr5FFsdKcniKlQh-PNfLmU0Lo9V-rUvb=s64","userId":"07930221275951267559"}}},"source":["new_model.save('final_model')"],"execution_count":19,"outputs":[{"output_type":"stream","text":["WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/tensorflow_core/python/ops/resource_variable_ops.py:1781: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.\n","Instructions for updating:\n","If using Keras pass *_constraint arguments to layers.\n","INFO:tensorflow:Assets written to: final_model/assets\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"zj4aTMPfLMzd","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":425},"outputId":"22a4712c-a07d-4ae9-8a1c-5747f4d1d34b","executionInfo":{"status":"ok","timestamp":1577525144458,"user_tz":-330,"elapsed":7579,"user":{"displayName":"Vineeth M","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mAmiLzUgr5FFsdKcniKlQh-PNfLmU0Lo9V-rUvb=s64","userId":"07930221275951267559"}}},"source":["!saved_model_cli show --all --dir final_model"],"execution_count":20,"outputs":[{"output_type":"stream","text":["\n","MetaGraphDef with tag-set: 'serve' contains the following SignatureDefs:\n","\n","signature_def['__saved_model_init_op']:\n","  The given SavedModel SignatureDef contains the following input(s):\n","  The given SavedModel SignatureDef contains the following output(s):\n","    outputs['__saved_model_init_op'] tensor_info:\n","        dtype: DT_INVALID\n","        shape: unknown_rank\n","        name: NoOp\n","  Method name is: \n","\n","signature_def['serving_default']:\n","  The given SavedModel SignatureDef contains the following input(s):\n","    inputs['conv2d_input'] tensor_info:\n","        dtype: DT_FLOAT\n","        shape: (-1, 28, 28, 1)\n","        name: serving_default_conv2d_input:0\n","  The given SavedModel SignatureDef contains the following output(s):\n","    outputs['dense_1'] tensor_info:\n","        dtype: DT_FLOAT\n","        shape: (-1, 10)\n","        name: StatefulPartitionedCall:0\n","  Method name is: tensorflow/serving/predict\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"9TdMH1xzLNK0","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":374},"outputId":"2fc273c2-7739-44ed-e2ff-c8c15c9cb6e8","executionInfo":{"status":"ok","timestamp":1577525395954,"user_tz":-330,"elapsed":231426,"user":{"displayName":"Vineeth M","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mAmiLzUgr5FFsdKcniKlQh-PNfLmU0Lo9V-rUvb=s64","userId":"07930221275951267559"}}},"source":["N_warmup_run = 50\n","N_run = 1000\n","elapsed_time = []\n","\n","for i in range(N_warmup_run):\n","\n","  preds = new_model.predict(x_test[160:161])\n","  preds = new_model.predict(x_test[140:141])\n","  preds = new_model.predict(x_test[1400:1401])\n","  preds = new_model.predict(x_test[1600:1601])\n","  preds = new_model.predict(x_test[1200:1201])\n","\n","\n","for i in range(N_run):\n","  start_time = time.time()\n","\n","  preds = new_model.predict(x_test[160:161])\n","  preds = new_model.predict(x_test[140:141])\n","  preds = new_model.predict(x_test[1400:1401])\n","  preds = new_model.predict(x_test[1600:1601])\n","  preds = new_model.predict(x_test[1200:1201])\n","  preds = new_model.predict(x_test[100:101])\n","  \n","  end_time = time.time()\n","  elapsed_time = np.append(elapsed_time, end_time - start_time)\n","  if i % 50 == 0:\n","    print('Step {}: {:4.1f}ms'.format(i, (elapsed_time[-50:].mean()) * 1000))\n","\n","print('Throughput: {:.0f} images/s'.format(N_run * batch_size / elapsed_time.sum()))"],"execution_count":21,"outputs":[{"output_type":"stream","text":["Step 0: 209.6ms\n","Step 50: 218.5ms\n","Step 100: 222.0ms\n","Step 150: 215.5ms\n","Step 200: 217.9ms\n","Step 250: 222.4ms\n","Step 300: 224.8ms\n","Step 350: 205.5ms\n","Step 400: 232.1ms\n","Step 450: 205.8ms\n","Step 500: 234.4ms\n","Step 550: 205.0ms\n","Step 600: 205.5ms\n","Step 650: 242.2ms\n","Step 700: 206.4ms\n","Step 750: 204.6ms\n","Step 800: 252.7ms\n","Step 850: 206.8ms\n","Step 900: 206.7ms\n","Step 950: 204.9ms\n","Throughput: 583 images/s\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"K3iyyVXJPFdB","colab_type":"text"},"source":["TF-TRT32"]},{"cell_type":"code","metadata":{"id":"EPx-QDOVLMuQ","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":119},"outputId":"119d0a09-35ca-4ec5-eefd-4c8860d96611","executionInfo":{"status":"ok","timestamp":1577525487511,"user_tz":-330,"elapsed":2933,"user":{"displayName":"Vineeth M","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mAmiLzUgr5FFsdKcniKlQh-PNfLmU0Lo9V-rUvb=s64","userId":"07930221275951267559"}}},"source":["print('Converting to TF-TRT FP32...')\n","conversion_params = trt.DEFAULT_TRT_CONVERSION_PARAMS._replace(precision_mode=trt.TrtPrecisionMode.FP32,\n","                                                               max_workspace_size_bytes=8000000000)\n","\n","converter = trt.TrtGraphConverterV2(input_saved_model_dir=model_dir,\n","                                    conversion_params=conversion_params)\n","converter.convert()\n","converter.save(output_saved_model_dir='model_trtfp32')\n","print('Done Converting to TF-TRT FP32')"],"execution_count":22,"outputs":[{"output_type":"stream","text":["Converting to TF-TRT FP32...\n","INFO:tensorflow:Linked TensorRT version: (5, 1, 5)\n","INFO:tensorflow:Loaded TensorRT version: (5, 1, 5)\n","INFO:tensorflow:Running against TensorRT version 5.1.5\n","INFO:tensorflow:Assets written to: model_trtfp32/assets\n","Done Converting to TF-TRT FP32\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"vHHMfVpBR72p","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":51},"outputId":"4a4d05da-f549-4b77-8510-f5520e68a0fe","executionInfo":{"status":"ok","timestamp":1577525592725,"user_tz":-330,"elapsed":1976,"user":{"displayName":"Vineeth M","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mAmiLzUgr5FFsdKcniKlQh-PNfLmU0Lo9V-rUvb=s64","userId":"07930221275951267559"}}},"source":["print(os.getcwd())\n","model_trt32_dir = os.path.join(os.getcwd(),\"model_trtfp32\")\n","print(model_trt32_dir)"],"execution_count":23,"outputs":[{"output_type":"stream","text":["/content/drive/My Drive/Colab Notebooks/ISRLU\n","/content/drive/My Drive/Colab Notebooks/ISRLU/model_trtfp32\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"PBIOXb96BocQ","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":425},"outputId":"cb432ed2-9cb6-42c0-e162-7fac02deb82b","executionInfo":{"status":"ok","timestamp":1577525606197,"user_tz":-330,"elapsed":8522,"user":{"displayName":"Vineeth M","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mAmiLzUgr5FFsdKcniKlQh-PNfLmU0Lo9V-rUvb=s64","userId":"07930221275951267559"}}},"source":["!saved_model_cli show --all --dir model_trtfp32"],"execution_count":24,"outputs":[{"output_type":"stream","text":["\n","MetaGraphDef with tag-set: 'serve' contains the following SignatureDefs:\n","\n","signature_def['__saved_model_init_op']:\n","  The given SavedModel SignatureDef contains the following input(s):\n","  The given SavedModel SignatureDef contains the following output(s):\n","    outputs['__saved_model_init_op'] tensor_info:\n","        dtype: DT_INVALID\n","        shape: unknown_rank\n","        name: NoOp\n","  Method name is: \n","\n","signature_def['serving_default']:\n","  The given SavedModel SignatureDef contains the following input(s):\n","    inputs['conv2d_input'] tensor_info:\n","        dtype: DT_FLOAT\n","        shape: (-1, 28, 28, 1)\n","        name: serving_default_conv2d_input:0\n","  The given SavedModel SignatureDef contains the following output(s):\n","    outputs['dense_1'] tensor_info:\n","        dtype: DT_FLOAT\n","        shape: unknown_rank\n","        name: PartitionedCall:0\n","  Method name is: tensorflow/serving/predict\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"mzRWbtiTPRPW","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"ce0e7ac6-2705-49f0-c3d9-d7d6cdd8b2b6","executionInfo":{"status":"ok","timestamp":1577525611423,"user_tz":-330,"elapsed":1689,"user":{"displayName":"Vineeth M","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mAmiLzUgr5FFsdKcniKlQh-PNfLmU0Lo9V-rUvb=s64","userId":"07930221275951267559"}}},"source":["new_model_trt32 = tf.saved_model.load(model_trt32_dir)\n","print(list(new_model_trt32.signatures.keys()))\n","#signature_keys = list(new_model_trt32.signatures.keys())\n","#print(signature_keys)"],"execution_count":25,"outputs":[{"output_type":"stream","text":["['serving_default']\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"MtxNJn-HYhq8","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"d5d0cee6-ec10-40ae-da98-a0d4bf17b963","executionInfo":{"status":"ok","timestamp":1577525627534,"user_tz":-330,"elapsed":1451,"user":{"displayName":"Vineeth M","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mAmiLzUgr5FFsdKcniKlQh-PNfLmU0Lo9V-rUvb=s64","userId":"07930221275951267559"}}},"source":["infer = new_model_trt32.signatures['serving_default']\n","print(infer.structured_outputs)"],"execution_count":26,"outputs":[{"output_type":"stream","text":["{'dense_1': TensorSpec(shape=<unknown>, dtype=tf.float32, name='dense_1')}\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"JKG9EwZVzn03","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"528f9a70-8f5e-46bc-e1d4-2a228a5d09c6","executionInfo":{"status":"ok","timestamp":1577525924449,"user_tz":-330,"elapsed":1437,"user":{"displayName":"Vineeth M","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mAmiLzUgr5FFsdKcniKlQh-PNfLmU0Lo9V-rUvb=s64","userId":"07930221275951267559"}}},"source":["graph_func = new_model_trt32.signatures['serving_default']\n","frozen_func = trt.convert_to_constants.convert_variables_to_constants_v2(graph_func)\n","print(type(frozen_func))"],"execution_count":35,"outputs":[{"output_type":"stream","text":["<class 'tensorflow.python.eager.wrap_function.WrappedFunction'>\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"pE2Eq33jC6cV","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":265},"outputId":"9307168e-0f8e-48ce-df32-78d72019573c","executionInfo":{"status":"ok","timestamp":1577526095772,"user_tz":-330,"elapsed":1375,"user":{"displayName":"Vineeth M","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mAmiLzUgr5FFsdKcniKlQh-PNfLmU0Lo9V-rUvb=s64","userId":"07930221275951267559"}}},"source":["plt.imshow(x_test[140:141].reshape(28,28),cmap='gray')\n","plt.show()\n","x = x_test[140:141] "],"execution_count":36,"outputs":[{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"v6EGGEG1D_fI","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":170},"outputId":"288f8732-670c-47a7-c9d2-13d3a1403b7f","executionInfo":{"status":"ok","timestamp":1577527397825,"user_tz":-330,"elapsed":1637,"user":{"displayName":"Vineeth M","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mAmiLzUgr5FFsdKcniKlQh-PNfLmU0Lo9V-rUvb=s64","userId":"07930221275951267559"}}},"source":["label = infer(tf.constant(x))[new_model.output_names[0]]\n","print(label)\n","decoded = np.asarray(label)[0]\n","print(decoded)\n","thresholded = (decoded>0.5)*1.0\n","print(\"Threshold Score : \", thresholded)\n","print(\"Predicted Digit : \",np.where(thresholded == 1)[0][0])\n"],"execution_count":53,"outputs":[{"output_type":"stream","text":["tf.Tensor(\n","[[1.08549756e-08 3.06332331e-05 1.86836189e-07 6.93992953e-12\n","  9.99965549e-01 8.20322654e-09 2.84498446e-06 5.00121899e-08\n","  6.63622302e-07 1.00620284e-07]], shape=(1, 10), dtype=float32)\n","[1.08549756e-08 3.06332331e-05 1.86836189e-07 6.93992953e-12\n"," 9.99965549e-01 8.20322654e-09 2.84498446e-06 5.00121899e-08\n"," 6.63622302e-07 1.00620284e-07]\n","Threshold Score :  [0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]\n","Predicted Digit :  4\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"M9f9esANJ24r","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":85},"outputId":"49379179-daca-4c84-c845-bbc561d01078","executionInfo":{"status":"ok","timestamp":1577526113967,"user_tz":-330,"elapsed":1419,"user":{"displayName":"Vineeth M","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mAmiLzUgr5FFsdKcniKlQh-PNfLmU0Lo9V-rUvb=s64","userId":"07930221275951267559"}}},"source":["x = x_test[160:161]\n","z = infer(tf.constant(x))\n","print(z)"],"execution_count":38,"outputs":[{"output_type":"stream","text":["{'dense_1': <tf.Tensor: id=355454, shape=(1, 10), dtype=float32, numpy=\n","array([[1.08549756e-08, 3.06332331e-05, 1.86836189e-07, 6.93992953e-12,\n","        9.99965549e-01, 8.20322654e-09, 2.84498446e-06, 5.00121899e-08,\n","        6.63622302e-07, 1.00620284e-07]], dtype=float32)>}\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"N8MxzpQPR4b_","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":374},"outputId":"d2a37bc4-9504-4384-b7f4-9fbf144d0c74","executionInfo":{"status":"ok","timestamp":1577526597745,"user_tz":-330,"elapsed":6276,"user":{"displayName":"Vineeth M","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mAmiLzUgr5FFsdKcniKlQh-PNfLmU0Lo9V-rUvb=s64","userId":"07930221275951267559"}}},"source":["N_warmup_run = 50\n","N_run = 1000\n","elapsed_time = []\n","\n","for i in range(N_warmup_run):\n","\n","  preds = infer(tf.constant(x_test[160:161]))\n","  preds = infer(tf.constant(x_test[140:141]))\n","  preds = infer(tf.constant(x_test[1400:1401]))\n","  preds = infer(tf.constant(x_test[1600:1601]))\n","  preds = infer(tf.constant(x_test[1200:1201]))\n","\n","for i in range(N_run):\n","  start_time = time.time()\n","\n","  preds = infer(tf.constant(x_test[160:161]))\n","  preds = infer(tf.constant(x_test[140:141]))\n","  preds = infer(tf.constant(x_test[1400:1401]))\n","  preds = infer(tf.constant(x_test[1600:1601]))\n","  preds = infer(tf.constant(x_test[1200:1201]))\n","  \n","  end_time = time.time()\n","  elapsed_time = np.append(elapsed_time, end_time - start_time)\n","  if i % 50 == 0:\n","    print('Step {}: {:4.1f}ms'.format(i, (elapsed_time[-50:].mean()) * 1000))\n","\n","print('Throughput: {:.0f} images/s'.format(N_run * batch_size / elapsed_time.sum()))"],"execution_count":43,"outputs":[{"output_type":"stream","text":["Step 0:  3.6ms\n","Step 50:  3.9ms\n","Step 100:  4.0ms\n","Step 150:  4.2ms\n","Step 200:  3.9ms\n","Step 250:  3.9ms\n","Step 300:  4.1ms\n","Step 350:  4.0ms\n","Step 400:  4.2ms\n","Step 450:  4.1ms\n","Step 500:  4.3ms\n","Step 550:  3.9ms\n","Step 600:  4.0ms\n","Step 650:  4.6ms\n","Step 700:  3.9ms\n","Step 750:  4.0ms\n","Step 800:  4.3ms\n","Step 850:  4.5ms\n","Step 900:  4.2ms\n","Step 950:  4.2ms\n","Throughput: 31093 images/s\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"zuLVEejVZeqx","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"b0713474-8008-43d6-c09c-d9c0864cc7a1","executionInfo":{"status":"ok","timestamp":1577526970744,"user_tz":-330,"elapsed":1456,"user":{"displayName":"Vineeth M","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mAmiLzUgr5FFsdKcniKlQh-PNfLmU0Lo9V-rUvb=s64","userId":"07930221275951267559"}}},"source":["print(y_test[1:2],y_test[2:3])"],"execution_count":46,"outputs":[{"output_type":"stream","text":["[[0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]] [[0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"5c3hoovTNyx8","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":51},"outputId":"56ec3fef-39f7-4603-b47c-ed04fd4c988c","executionInfo":{"status":"ok","timestamp":1577527638473,"user_tz":-330,"elapsed":1835,"user":{"displayName":"Vineeth M","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mAmiLzUgr5FFsdKcniKlQh-PNfLmU0Lo9V-rUvb=s64","userId":"07930221275951267559"}}},"source":["print(y_test[140:141][0])\n","print(np.where(y_test[140:141][0] == 1.)[0][0])"],"execution_count":64,"outputs":[{"output_type":"stream","text":["[0. 0. 0. 0. 0. 0. 1. 0. 0. 0.]\n","6\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"ZYHWanEO7fd0","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":1000},"outputId":"9d654bb9-7f2d-435c-af9d-e39bbeee8bdf","executionInfo":{"status":"ok","timestamp":1577528244698,"user_tz":-330,"elapsed":1450,"user":{"displayName":"Vineeth M","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mAmiLzUgr5FFsdKcniKlQh-PNfLmU0Lo9V-rUvb=s64","userId":"07930221275951267559"}}},"source":["# finding the accuracy of the tensorrt model\n","correct = 0\n","n = 100\n","for i in range(n):\n","  label = infer(tf.constant(x_test[i:i+1]))[new_model.output_names[0]]\n","  #print(label)\n","  decoded = np.asarray(label)[0]\n","  #print(decoded)\n","  thresholded = (decoded>0.5)*1\n","  #print(\"Threshold Score : \", thresholded)\n","  print(np.where(thresholded == 1)[0][0])\n","  print(np.where(y_test[i:i+1][0] == 1.)[0][0])\n","  print(\"-------------------------------------------------------\")\n","  if(np.where(thresholded == 1)[0][0] == np.where(y_test[i:i+1][0] == 1.)[0][0]):\n","    correct += 1\n","print(\"Accuracy : \", (correct*100.0)/n)  "],"execution_count":82,"outputs":[{"output_type":"stream","text":["7\n","7\n","-------------------------------------------------------\n","2\n","2\n","-------------------------------------------------------\n","1\n","1\n","-------------------------------------------------------\n","0\n","0\n","-------------------------------------------------------\n","4\n","4\n","-------------------------------------------------------\n","1\n","1\n","-------------------------------------------------------\n","4\n","4\n","-------------------------------------------------------\n","9\n","9\n","-------------------------------------------------------\n","5\n","5\n","-------------------------------------------------------\n","9\n","9\n","-------------------------------------------------------\n","0\n","0\n","-------------------------------------------------------\n","6\n","6\n","-------------------------------------------------------\n","9\n","9\n","-------------------------------------------------------\n","0\n","0\n","-------------------------------------------------------\n","1\n","1\n","-------------------------------------------------------\n","5\n","5\n","-------------------------------------------------------\n","9\n","9\n","-------------------------------------------------------\n","7\n","7\n","-------------------------------------------------------\n","8\n","3\n","-------------------------------------------------------\n","4\n","4\n","-------------------------------------------------------\n","9\n","9\n","-------------------------------------------------------\n","6\n","6\n","-------------------------------------------------------\n","6\n","6\n","-------------------------------------------------------\n","5\n","5\n","-------------------------------------------------------\n","4\n","4\n","-------------------------------------------------------\n","0\n","0\n","-------------------------------------------------------\n","7\n","7\n","-------------------------------------------------------\n","4\n","4\n","-------------------------------------------------------\n","0\n","0\n","-------------------------------------------------------\n","1\n","1\n","-------------------------------------------------------\n","3\n","3\n","-------------------------------------------------------\n","1\n","1\n","-------------------------------------------------------\n","3\n","3\n","-------------------------------------------------------\n","4\n","4\n","-------------------------------------------------------\n","7\n","7\n","-------------------------------------------------------\n","2\n","2\n","-------------------------------------------------------\n","7\n","7\n","-------------------------------------------------------\n","1\n","1\n","-------------------------------------------------------\n","2\n","2\n","-------------------------------------------------------\n","1\n","1\n","-------------------------------------------------------\n","1\n","1\n","-------------------------------------------------------\n","7\n","7\n","-------------------------------------------------------\n","4\n","4\n","-------------------------------------------------------\n","2\n","2\n","-------------------------------------------------------\n","3\n","3\n","-------------------------------------------------------\n","5\n","5\n","-------------------------------------------------------\n","1\n","1\n","-------------------------------------------------------\n","2\n","2\n","-------------------------------------------------------\n","4\n","4\n","-------------------------------------------------------\n","4\n","4\n","-------------------------------------------------------\n","6\n","6\n","-------------------------------------------------------\n","3\n","3\n","-------------------------------------------------------\n","5\n","5\n","-------------------------------------------------------\n","5\n","5\n","-------------------------------------------------------\n","6\n","6\n","-------------------------------------------------------\n","0\n","0\n","-------------------------------------------------------\n","4\n","4\n","-------------------------------------------------------\n","1\n","1\n","-------------------------------------------------------\n","9\n","9\n","-------------------------------------------------------\n","5\n","5\n","-------------------------------------------------------\n","7\n","7\n","-------------------------------------------------------\n","8\n","8\n","-------------------------------------------------------\n","5\n","9\n","-------------------------------------------------------\n","3\n","3\n","-------------------------------------------------------\n","7\n","7\n","-------------------------------------------------------\n","4\n","4\n","-------------------------------------------------------\n","6\n","6\n","-------------------------------------------------------\n","4\n","4\n","-------------------------------------------------------\n","3\n","3\n","-------------------------------------------------------\n","0\n","0\n","-------------------------------------------------------\n","7\n","7\n","-------------------------------------------------------\n","0\n","0\n","-------------------------------------------------------\n","2\n","2\n","-------------------------------------------------------\n","9\n","9\n","-------------------------------------------------------\n","1\n","1\n","-------------------------------------------------------\n","7\n","7\n","-------------------------------------------------------\n","3\n","3\n","-------------------------------------------------------\n","2\n","2\n","-------------------------------------------------------\n","9\n","9\n","-------------------------------------------------------\n","7\n","7\n","-------------------------------------------------------\n","7\n","7\n","-------------------------------------------------------\n","6\n","6\n","-------------------------------------------------------\n","2\n","2\n","-------------------------------------------------------\n","7\n","7\n","-------------------------------------------------------\n","8\n","8\n","-------------------------------------------------------\n","4\n","4\n","-------------------------------------------------------\n","7\n","7\n","-------------------------------------------------------\n","3\n","3\n","-------------------------------------------------------\n","6\n","6\n","-------------------------------------------------------\n","1\n","1\n","-------------------------------------------------------\n","3\n","3\n","-------------------------------------------------------\n","6\n","6\n","-------------------------------------------------------\n","9\n","9\n","-------------------------------------------------------\n","3\n","3\n","-------------------------------------------------------\n","1\n","1\n","-------------------------------------------------------\n","4\n","4\n","-------------------------------------------------------\n","1\n","1\n","-------------------------------------------------------\n","7\n","7\n","-------------------------------------------------------\n","6\n","6\n","-------------------------------------------------------\n","9\n","9\n","-------------------------------------------------------\n","Accuracy :  98.0\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"evC1h40f8NBa","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"1nUzJzhZ8Rp8","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]}]}